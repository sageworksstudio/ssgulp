{"version":3,"sources":["_settings.scss","app.css","components/_mixins.scss","partials/_common.scss","partials/_header.scss","partials/_footer.scss"],"names":[],"mappings":"AAAQ,+EAAA;AAWR;EACE,sBAAA;ACTF;;ADYA;EACE,eAdS;ACKX;;ACPA;;;;;;;;;;;;;;;;EAAA;AA+BA;;;;;;;;;;;EAAA;AAoBA;;;;;;;;;;;;EAAA;ACnDA;EACE,uBAAA;EACA,SAAA;AFoDF;;AEhDE;EACE,cAAA;EACA,gBAAA;EACA,aAAA;AFmDJ;;AG5DA;EACE,aAAA;AH+DF;AG9DE;EACE,cAAA;EACA,gBAAA;EACA,aAAA;AHgEJ;;AG7DA;EACE,iBAAA;EACA,eAAA;AHgEF;;AG9DA;EACE,gBAAA;EACA,YAAA;EACA,eAAA;EACA,eAAA;EACA,kBAAA;EACA,WAAA;EACA,SAAA;EACA,YAAA;AHiEF;;AG/DA;EACE,qCAAA;EACA,aAAA;EACA,OAAA;EACA,gBAAA;EACA,UAAA;EACA,eAAA;EACA,kBAAA;EACA,6BAAA;EACA,MAAA;EACA,QAAA;EACA,YAAA;AHkEF;AGjEE;EACE,qBAAA;EACA,SAAA;EACA,eAAA;EACA,kBAAA;AHmEJ;AGlEI;EACE,aAAA;EACA,YAAA;AHoEN;AGnEM;EACE,WAAA;EACA,cAAA;EACA,eAAA;EACA,kBAAA;EACA,qBAAA;EACA,kBAAA;AHqER;AGjEE;EACE,YAAA;AHmEJ;AGlEI;EACE,mBAAA;AHoEN;;AGhEA;EACE,gBAAA;EACA,YAAA;EACA,WAAA;EACA,eAAA;EACA,cAAA;EACA,eAAA;EACA,2BAAA;EACA,kBAAA;EACA,QAAA;EACA,UAAA;EACA,YAAA;AHmEF;;AG9DA,UAAA;AACA;EAEI;IACE,aAAA;IACA,8BAAA;EHgEJ;;EG7DA;IACE,aAAA;EHgEF;;EG9DA;IACE,aAAA;EHiEF;;EG/DA;IACE,kCAAA;IACA,YAAA;IACA,cAAA;IACA,aAAA;IACA,gBAAA;IACA,kBAAA;IACA,WAAA;EHkEF;EGjEE;IACE,cAAA;IACA,kBAAA;IACA,UAAA;IACA,iBAAA;EHmEJ;EGlEI;IACE,qBAAA;EHoEN;EGnEM;IACE,WAAA;IACA,eAAA;IACA,mBAAA;EHqER;AACF;AIhLE;EACE,cAAA;EACA,gBAAA;EACA,aAAA;AJkLJ","file":"app.css","sourcesContent":["@import url(\"https://fonts.googleapis.com/css?family=Roboto+Condensed:300,400\");\n\n$rem-base: 16px; // Default font rem size\n$font-step: 0.33333%; // Font size  if using remCalc()\n\n$primary-color: #6d4c41;\n$primary-text: #fff;\n\n$secondary-color: #cddc39;\n$secondary-text: #000;\n\n* {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-size: $rem-base;\n}\n","@import url(\"https://fonts.googleapis.com/css?family=Roboto+Condensed:300,400\");\n* {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-size: 16px;\n}\n\n/**\n *\n * @mixin simple-grid();\n *\n * A very basic grid for very basic grid needs. Intended to replace float grids.\n *\n * Takes 5 arguements:\n * $cols    Columns, can be any value 'grid-template-columns' accepts. Default: 1fr\n * $rows    Rows, can be any value 'grid-auto-rows' allows. Default: auto\n                NOTE: 'auto' will cause all cells, in all rows, to be equal height\n * $gutter  Gutter, can be any value 'gap' allows. Default: 1rem\n * $margin  Margin, the outer margin of the grid. Can be any value(s) 'margin' accepts. Default: 0\n * $width   Width, can be any value 'width' allows. Default: 100%\n *\n * Example: simple-grid(1fr 1fr 1fr, auto, 5px, 1em, 768px)\n *\n */\n/**\n *\n * @mixin simple-flex();\n *\n * A very basic flex container to align elements in a box.\n *\n * $align   Vertical alignment, accepts any value 'align-items' accepts. Default: center\n * $justify Horizontal alignment, accepts any value 'justify-content' accepts. Default: center\n *\n * Example: simple-flex(center, center)\n *\n */\n/**\n * @mixin remCalc();\n *\n * Calculate font size based on defined $rem-base and $font-step variable in _settings.scss\n *\n * Takes one argument. The number you want to multiple by $font-step\n *\n * $n   Any number of floating point number.\n *\n * Example: remCalc(4.5);\n * If the font rem size was set to 16px, this will produce: font-size: 1.5rem; (calculated 24px)\n * (4.5 * .33333 = 1.5)\n */\nbody {\n  font-family: sans-serif;\n  margin: 0;\n}\n\nmain .container {\n  margin: 0 auto;\n  max-width: 768px;\n  padding: 1rem;\n}\n\nheader {\n  height: 100px;\n}\nheader .container {\n  margin: 0 auto;\n  max-width: 768px;\n  padding: 1rem;\n}\n\n.brand {\n  font-weight: bold;\n  font-size: 2rem;\n}\n\n.nav-toggle {\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 20px;\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  z-index: 100;\n}\n\nnav {\n  background-color: rgba(0, 0, 0, 0.95);\n  height: 100vh;\n  left: 0;\n  overflow: scroll;\n  padding: 0;\n  position: fixed;\n  text-align: center;\n  transition: all 0.3s ease-out;\n  top: 0;\n  width: 0;\n  z-index: 100;\n}\nnav ul {\n  list-style-type: none;\n  margin: 0;\n  padding: 50px 0;\n  position: relative;\n}\nnav ul li {\n  margin: 5px 0;\n  padding: 5px;\n}\nnav ul li a {\n  color: #fff;\n  display: block;\n  font-size: 18px;\n  text-align: center;\n  text-decoration: none;\n  visibility: hidden;\n}\nnav.show-nav {\n  width: 100vw;\n}\nnav.show-nav ul li a {\n  visibility: visible;\n}\n\n.close-nav {\n  background: none;\n  border: none;\n  color: #fff;\n  cursor: pointer;\n  display: block;\n  font-size: 40px;\n  padding: 45px 0.9375rem 0 0;\n  position: absolute;\n  right: 0;\n  top: -36px;\n  z-index: 101;\n}\n\n/* 768 + */\n@media (min-width: 768px) {\n  header .container {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .nav-toggle {\n    display: none;\n  }\n\n  .close-nav {\n    display: none;\n  }\n\n  nav {\n    background-color: rgba(0, 0, 0, 0);\n    height: auto;\n    margin: 0 auto;\n    min-height: 0;\n    overflow: hidden;\n    position: relative;\n    width: 100%;\n  }\n  nav ul {\n    display: block;\n    margin-right: -4px;\n    padding: 0;\n    text-align: right;\n  }\n  nav ul li {\n    display: inline-block;\n  }\n  nav ul li a {\n    color: #000;\n    font-size: 14px;\n    visibility: visible;\n  }\n}\nfooter .container {\n  margin: 0 auto;\n  max-width: 768px;\n  padding: 1rem;\n}","/**\n *\n * @mixin simple-grid();\n *\n * A very basic grid for very basic grid needs. Intended to replace float grids.\n *\n * Takes 5 arguements:\n * $cols    Columns, can be any value 'grid-template-columns' accepts. Default: 1fr\n * $rows    Rows, can be any value 'grid-auto-rows' allows. Default: auto\n                NOTE: 'auto' will cause all cells, in all rows, to be equal height\n * $gutter  Gutter, can be any value 'gap' allows. Default: 1rem\n * $margin  Margin, the outer margin of the grid. Can be any value(s) 'margin' accepts. Default: 0\n * $width   Width, can be any value 'width' allows. Default: 100%\n *\n * Example: simple-grid(1fr 1fr 1fr, auto, 5px, 1em, 768px)\n *\n */\n@mixin simple-grid(\n    $cols:1fr,\n    $rows:auto,\n    $gutter:1rem,\n    $margin:0,\n    $width:100%) {\n        display: grid;\n        grid-template-columns: $cols;\n        grid-auto-rows: $rows;\n        gap: $gutter;\n        margin: $margin;\n        max-width: $width;\n    }\n\n/**\n *\n * @mixin simple-flex();\n *\n * A very basic flex container to align elements in a box.\n *\n * $align   Vertical alignment, accepts any value 'align-items' accepts. Default: center\n * $justify Horizontal alignment, accepts any value 'justify-content' accepts. Default: center\n *\n * Example: simple-flex(center, center)\n *\n */\n@mixin simple-flex(\n    $align:center,\n    $justify:center) {\n        display: flex;\n        align-items: $align;\n        justify-content: $justify;\n    }\n\n/**\n * @mixin remCalc();\n *\n * Calculate font size based on defined $rem-base and $font-step variable in _settings.scss\n *\n * Takes one argument. The number you want to multiple by $font-step\n *\n * $n   Any number of floating point number.\n *\n * Example: remCalc(4.5);\n * If the font rem size was set to 16px, this will produce: font-size: 1.5rem; (calculated 24px)\n * (4.5 * .33333 = 1.5)\n */\n@mixin remCalc($n) {\n    font-size: $n * $font-step + rem;\n}\n","body {\n  font-family: sans-serif;\n  margin: 0;\n}\n\nmain {\n  .container {\n    margin: 0 auto;\n    max-width: 768px;\n    padding: 1rem;\n  }\n}\n","header {\n  height: 100px;\n  .container {\n    margin: 0 auto;\n    max-width: 768px;\n    padding: 1rem;\n  }\n}\n.brand {\n  font-weight: bold;\n  font-size: 2rem;\n}\n.nav-toggle {\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 20px;\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  z-index: 100;\n}\nnav {\n  background-color: rgba(0, 0, 0, 0.95);\n  height: 100vh;\n  left: 0;\n  overflow: scroll;\n  padding: 0;\n  position: fixed;\n  text-align: center;\n  transition: all .3s ease-out;\n  top: 0;\n  width: 0;\n  z-index: 100;\n  ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 50px 0;\n    position: relative;\n    li {\n      margin: 5px 0;\n      padding: 5px;\n      a {\n        color: #fff;\n        display: block;\n        font-size: 18px;\n        text-align: center;\n        text-decoration: none;\n        visibility: hidden;\n      }\n    }\n  }\n  &.show-nav {\n    width: 100vw;\n    ul li a {\n      visibility: visible;\n    }\n  }\n}\n.close-nav {\n  background: none;\n  border: none;\n  color: #fff;\n  cursor: pointer;\n  display: block;\n  font-size: 40px;\n  padding: 45px 0.9375rem 0 0;\n  position: absolute;\n  right: 0;\n  top: -36px;\n  z-index: 101;\n}\n\n\n\n/* 768 + */\n@media (min-width: 768px) {\n  header {\n    .container {\n      display: flex;\n      justify-content: space-between;\n    }\n  }\n  .nav-toggle {\n    display: none;\n  }\n  .close-nav {\n    display: none;\n  }\n  nav {\n    background-color: rgba(0, 0, 0, 0.0);\n    height: auto;\n    margin: 0 auto;\n    min-height: 0;\n    overflow: hidden;\n    position: relative;\n    width: 100%;\n    ul {\n      display: block;\n      margin-right: -4px;\n      padding: 0;\n      text-align: right;\n      li {\n        display: inline-block;\n        a {\n          color: #000;\n          font-size: 14px;\n          visibility: visible;\n        }\n      }\n    }\n  }\n}\n","footer {\n  .container {\n    margin: 0 auto;\n    max-width: 768px;\n    padding: 1rem;\n  }\n}\n"]}